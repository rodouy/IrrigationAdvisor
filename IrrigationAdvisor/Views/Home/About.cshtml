@model List<IrrigationAdvisor.Models.GridHome.GridPivotHome>

@{
    ViewBag.Title = "About";
}
<h2>@ViewBag.Title.</h2>
<h3>@ViewBag.Message</h3>

@helper CustomCellColumnGreen(String Irrigation)
{
    if (Irrigation == string.Empty)
    {
        <td class="b7 tc bold status verde" style="color: white;">&nbsp;</td>

    }
    else
    {

        <td title="56,5% 8,84h" class="b7 tc bold status azul" style="color: white">@Irrigation</td>
    }

}





@helper CustomRenderingOfColumn(IrrigationAdvisor.Models.GridHome.GridPivotHome gridPivotItem)
{
    foreach (var detail in gridPivotItem.ListGridPivotDetailHome)
    {



        if (detail.IrrigationStatus == IrrigationAdvisor.Models.Utilities.Utils.IrrigationStatus.Green)
        {




            @CustomCellColumnGreen(detail.Irrigation);


        }

        if (detail.IrrigationStatus == IrrigationAdvisor.Models.Utilities.Utils.IrrigationStatus.Yellow)
        {
            <td class="b7 tc bold status amarelo" style="color: white;">&nbsp;</td>
        }

        if (detail.IrrigationStatus == IrrigationAdvisor.Models.Utilities.Utils.IrrigationStatus.Red)
        {
            <td class="b7 tc bold status verde" style="color: white;background-color: #EA0D0D;);">&nbsp;</td>
        }


    }
}


<table class="tabela_cores" border="0" width="10%" cellspacing="3" cellpadding="2" style="float: left">
    <tbody>
        <tr class="header_results">
            <th rowspan="2" class="b15 ">Pivot</th>

        </tr>
        <tr></tr>


        @foreach (var item in Model)
        {
            <tr class="body_results_01" onmouseover="this.style.backgroundColor='#CCFFFF';" onmouseout="this.style.backgroundColor=''">
                <td class="b15" style=" font-size:12px; width:30%"> @item.Titlle    </td>

            </tr>
        }

    </tbody>
</table>









<div style="table-layout:fixed;width: 70%;height: 150px;overflow: scroll;">
    <table class="tabela_cores" border="0" width="70%" cellspacing="3" cellpadding="2">
        <tbody>
            <tr class="header_results"></tr>
            <tr class="header_results">
                @foreach (var item in Model.First().ListGridPivotDetailHome)
                {

                    <th class="b6 tc f9" style="width: 10px; ">18/08</th>
                }
            </tr>

            @foreach (var item in Model)
            {


                <tr class="body_results_01" onmouseover="this.style.backgroundColor='#CCFFFF';" onmouseout="this.style.backgroundColor=''">


                    @CustomRenderingOfColumn(item)


                </tr>
            }

        </tbody>
    </table>

</div>

























@*@helper CustomRenderingOfColumn(IrrigationAdvisor.Models.GridHome.GridPivotHome gridPivotItem)
    {
        if (gridPivotItem.GridDayHome.Irrigation != IrrigationAdvisor.Models.Utilities.Utils.WeatherGrid.Green)
        {
            <span class="label label-success">Active</span>
        }

        if (gridPivotItem.GridDayHome.Irrigation != IrrigationAdvisor.Models.Utilities.Utils.WeatherGrid.Green)
        {
            <span class="label label-success">Active</span>
        }


        if (gridPivotItem.GridDayHome.Irrigation != IrrigationAdvisor.Models.Utilities.Utils.WeatherGrid.Green)
        {
            <span class="label label-success">Active</span>
        }
    }
    @Html.Grid(Model).Columns(columns =>
    {

        /* Adding "CompanyName" column: */
        columns.Add(o => o.PivotDate)
                .Encoded(false)
                .Sanitized(false)
                .Titled(Model[1].DayHeader.ToString());

        /* Adding not mapped column, that renders body, using inline Razor html helper */
        columns.Add()
                .Encoded(false)
                .Sanitized(false)
                .Titled(Model[2].DayHeader.ToString());
                .SetWidth(30)
                .RenderValueAs(o =>
                   CustomRenderingOfColumn(o));



        /* Adding "CompanyName" column: */
        columns.Add(o => o.Latitude)
                .Encoded(false)
                .Sanitized(false)
                            .Titled(Model[2].DayHeader.ToString());









    }).WithPaging(15).Sortable().Filterable().WithMultipleFilters()*@


